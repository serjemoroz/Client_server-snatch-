  Семиуровневая модель OSI описывает как работают сетевые устройства. Эта модель описывает процесс передачи данных, который разделили на 7 частей, каждый 
из которых отвечает за выполнение определённой функции:

  1. ФИЗИЧЕСКИЙ УРОВЕНЬ (ИЛИ "УРОВЕНЬ ПРОВОДОВ")
  Здесь происходит передача физических сигналов (токов, света или радио) от источника к получателю. На этом уровне мы оперируем кабелями, контактами в разъёмах,
кодированием единиц и нулей, модуляцией сигнала и т.д. Среди технологий, которые используются на этом уровнем, можно выделить:
  - интернет, который описывает как должны кодироваться сигналы, передаваться по проводам и т.д.;
  - Bluetooth, Wi-Fi, ИК-порт.
  Сетевые устройства, которые относят к этому уровню - это концентраторы и репитеры, т.е. устройства, которые передают сигнал, не вникая в его логику.

  2. КАНАЛЬНЫЙ УРОВЕНЬ
  Допустим,мы получили физический сигнал с первого уровня (набор напряжений разной амплитуды, волн или радиочастот) и теперь настало время всё это закодировать 
в биты, которые компьютер уже сможет понять.  
  На этом уровне проверяются и исправляются ошибки передачи и здесь мы оперируем понятием "Frame" или "Кадр" - это полезные данные, которым добавлена:
  - дополнительная служебная информация (например: адрес отправителя и получателя, т.к. необходимо указывать от кого и кому предназначаются пересылаемые данные);
  - mac-адреса (идентификаторы) состоят из 48 бит и выглядят примерно так: 00:16:52:00:1F:03, они необходимы для того, чтобы идентифицировать устройства в одной 
сети, т.е. mac - адрес устройста на канальном уровне.
  К технологиям, которые используются на этом уровне также относятся:
  - интернет;
  - протоколы: PPP, CDP, MPLS и др.
  Устройства, которые относят к этому уровню: комутаторы и мосты. Это устройства, которые необходимы для передачи нашего фрейма нужному адресату.

  3. СЕТЕВОЙ УРОВЕНЬ
  На этом уровне происходит маршрутизация трафика, например: если мы ходим попасть на определённый сайт, мы с помощью клиента отпавляем серверу DNS-запрос, 
получаем ответ в виде IP-адреа, который клиент подставляет в пакет с IP-адресами. Процесс , когда данные передаются с верхних уровней на нижние называется 
"инкапсуляцией данных", а когда с нижних на верхние - "декапсуляцией". Т.е. данные, приходящие с верхних уровней на каждых последующих уровнях как бы 
кладутся в конверт с полезной информацией, и когда устройство или приложение этого уровня получает конверт, оно знает что с ним делать, благодаря этой 
информации.
  На этом уровне, благодаря протоколу ICMP мы используем утилиту PING, которая помогает нам определить наличие проблем в сети.
  Устройства, которые относятся к этому уровню: маршрутизатор и протоколы маршрутизации (BGP, OSPF, RIP, EIGRP), которые занимаются передачей данных от 
источника к получателю между разными сетями.

  4. ТРАНСПОРТНЫЙ УРОВЕНЬ
  Обеспечивает передачу данных по сети. Предназначен для обеспечения надёжной передачи данных от отправителя к получателю. В жизни разный транспорт 
применяется для разной категории трафика, по аналогии с этим есть 2 протокола передачи данных:
- TCP (Transmission Control Protocol) используется, если трафик чувствителен к потерям, протокол обеспечивает контроль за передачей данных;
- UDP (User Datagram Protocol) используется, когда трафик не чувствителен к потерям (например: просмотр роликов на YouTube).

  5. СЕАНСОВЫЙ УРОВЕНЬ
  Занимается тем, что управляет соединениями (он их разрывает), например: аудио- или видео-конференция, т.к. на этом уровне устанавливается каким кодеком 
будет кодироваться сигнал, причём этот кодек должен присутствовать у обоих пользователей. 

  6. УРОВЕНЬ ПРЕДСТАВЛЕНИЯ
  Здесь происходит преобразование форматов сообщений: кодирование или сжатие (картинка из сервера приходит в видео текста (единиц и нулей), а клиент её уже 
кодирует в приемлемый для пользователя формат, именно этот процесс происходит на "Уровне представления).

  7. УРОВЕНЬ ПРИЛОЖЕНИЙ
  Тут находятся сетевые службы (Telenet, LPD, TFTP, NFS, DNS, DCHP, SNMP, X Window), которые позволяют конечным пользователям пользоваться интернетом. 
Уровень нужен, чтобы приложения имели доступ к сетевым службам (доступ к файлам, пересылки электронной почты, запросы в базы данных). 
  К технологиям, которые используются на этом уровне также относятся:  
  - HTTPS, HTTP, FTP, SMTP. 
